{
  "name": "@pyxismedia/lib-model",
  "version": "0.0.1",
  "description": "",
  "main": "./build/index.js",
  "scripts": {
    "lint": "eslint -c .eslintrc.json './src/**/*.ts'",
    "prettier": "prettier --config .prettierrc --fix --write './src/**/*.ts'",
    "prettier:lint": "prettier --config .prettierrc --check './src/**/*.ts'",
    "commit": "commit",
    "release": "semantic-release",
    "build": "rm -rf build && tsc -p tsconfig.json && rsync -avm --include='*.json' -f 'hide,! */' ./src/ ./build",
    "build:watch": "nodemon",
    "env": "export $(egrep -v '^#' .env | xargs)",
    "mongoimport:posts": "mongoimport -h $DB_HOSTNAME -d $DB_NAME -u $DB_USER -p $DB_PASSWORD --collection posts --file ./src/post/post.data.json --drop --jsonArray",
    "mongoimport:sections": "mongoimport -h $DB_HOSTNAME -d $DB_NAME -u $DB_USER -p $DB_PASSWORD --collection sections --file ./src/post/section.data.json --drop --jsonArray ",
    "mongoimport:users": "mongoimport -h $DB_HOSTNAME -d $DB_NAME -u $DB_USER -p $DB_PASSWORD --collection users --file ./src/user/user.data.json --drop --jsonArray",
    "mongoimport:users:roles": "mongoimport -h $DB_HOSTNAME -d $DB_NAME -u $DB_USER -p $DB_PASSWORD --collection roles --file ./src/user/role.data.json --drop --jsonArray",
    "mongoimport:users:access": "mongoimport -h $DB_HOSTNAME -d $DB_NAME -u $DB_USER -p $DB_PASSWORD --collection accesses --file ./src/user/access.data.json --drop --jsonArray",
    "mongoimport:products": "mongoimport -h $DB_HOSTNAME -d $DB_NAME -u $DB_USER -p $DB_PASSWORD --collection products --file ./src/eshop/product/product.data.json --drop --jsonArray",
    "mongoimport": "npm run mongoimport:posts && npm run mongoimport:sections && npm run mongoimport:users && npm run mongoimport:users:roles && npm run mongoimport:users:access && npm run mongoimport:products",
    "test": "ava",
    "test:watch": "ava --watch"
  },
  "peerDependencies": {
    "bcrypt": "^3.0.6",
    "class-transformer": "0.2.0",
    "class-validator": "^0.11.0",
    "mongoose": "^5.7.1",
    "@nestjs/common": "6.9.0",
    "@nestjs/swagger": "^3.0.2",
    "@nestjs/core": "^6.9.0"
  },
  "devDependencies": {
    "@nestjs/core": "^6.9.0",
    "@nestjs/common": "6.9.0",
    "@commitlint/cli": "^8.0.0",
    "@commitlint/config-conventional": "^8.0.0",
    "@commitlint/prompt-cli": "^8.0.0",
    "@nestjs/swagger": "^3.0.2",
    "@types/bcrypt": "^3.0.0",
    "@types/faker": "^4.1.8",
    "@types/mongoose": "^5.5.17",
    "@typescript-eslint/eslint-plugin": "^2.3.3",
    "@typescript-eslint/parser": "^2.13.0",
    "bcrypt": "^3.0.6",
    "class-transformer": "0.2.0",
    "class-validator": "^0.11.0",
    "eslint": "^6.3.0",
    "eslint-config-prettier": "^6.3.0",
    "eslint-plugin-import": "^2.18.2",
    "eslint-plugin-prettier": "^3.1.0",
    "husky": "3.0.9",
    "lint-staged": "9.4.2",
    "mongoose": "^5.7.1",
    "nodemon": "^2.0.0",
    "prettier": "^1.18.2",
    "semantic-release": "^15.13.17",
    "typescript": "^3.6.3"
  },
  "author": "",
  "license": "ISC",
  "lint-staged": {
    "{src}/**/*.ts*": [
      "npm run prettier",
      "git add"
    ]
  },
  "husky": {
    "hooks": {
      "pre-commit": "lint-staged",
      "pre-push": "npm run build && npm run lint && npm run test",
      "commit-msg": "commitlint -E HUSKY_GIT_PARAMS"
    }
  },
  "files": [
    "build"
  ],
  "engines": {
    "node": "10.15.3",
    "yarn": "1.17.3",
    "npm": "6.4.1"
  },
  "dependencies": {
    "accesscontrol": "^2.2.1",
    "ava": "^2.4.0",
    "dotenv-flow": "^3.1.0",
    "reflect-metadata": "^0.1.13",
    "ts-node": "^8.4.1",
    "typescript-json-serializer": "^1.4.2",
    "faker": "^4.1.0"
  }
}
